<!--
 * @Descripttion: 
 * @Author: 李增辉
 * @Date: 2022-04-13 13:45:14
 * @LastEditors: 李增辉
 * @LastEditTime: 2022-04-14 09:55:19
-->
<template>
  <div>
    <div class="container-search">
      <div>
        <el-cascader
          v-model="queryParmas.region"
          placeholder="所属区域"
          :options="options"
          :props="{ checkStrictly: true }"
          clearable
        ></el-cascader>
        <el-select placeholder="规划期(年)" v-model="quetyPlanDate">
          <el-option label="选项1" value="选项1"></el-option>
          <el-option label="选项2" value="选项2"></el-option>
          <el-option label="选项3" value="选项3"></el-option>
          <el-option label="选项1" value="选项1"></el-option>
          <el-option label="选项2" value="选项2"></el-option>
          <el-option label="选项3" value="选项3"></el-option>
          <el-option label="选项1" value="选项1"></el-option>
          <el-option label="选项2" value="选项2"></el-option>
          <el-option label="选项3" value="选项3"></el-option>
          <el-option label="选项1" value="选项1"></el-option>
          <el-option label="选项2" value="选项2"></el-option>
          <el-option label="选项3" value="选项3"></el-option>
        </el-select>
      </div>
      <div>
        <el-button
          type="primary"
          icon="iconfont icon-chaxun"
          @click="handelSearch"
          >查询</el-button
        >
        <el-button
          type="primary"
          icon="iconfont icon-zhongzhi"
          @click="resetQuery"
          >重置</el-button
        >
      </div>
    </div>
    <div class="container-main">
      <div class="table-handles">
        <el-button
          type="primary"
          icon="iconfont icon-addNode"
          @click="router.push({ path: '/addsubject' })"
          >新增</el-button
        >
        <el-button type="primary" icon="iconfont icon-shanchu">删除</el-button>
      </div>
      <el-table
        v-loading="loading"
        ref="singleTable"
        :data="tableData"
        @current-change="handleCurrentChange"
      >
        <el-table-column type="selection" width="55"> </el-table-column>
        <el-table-column type="index" width="70" label="序号">
        </el-table-column>
        <el-table-column property="planName" label="规划名称">
        </el-table-column>
        <el-table-column property="regionName" label="所属区域">
        </el-table-column>
        <el-table-column label="规划期（年）">
          <template slot-scope="scope">
            {{ `${scope.row.startYear}-${scope.row.endYear} ` }}
          </template>
        </el-table-column>
        <el-table-column
          property="demolishedArea"
          label="农村建设用地拆旧区总面积（公顷）"
        >
        </el-table-column>
        <el-table-column property="reclamationArea" label="复垦面积（公顷）">
        </el-table-column>
        <el-table-column property="balanceArea" label="建新面积（公顷）">
        </el-table-column>
        <el-table-column property="address" label="结余面积（公顷）">
        </el-table-column>
        <el-table-column property="address" label="地块上图"> </el-table-column>
        <el-table-column property="address">
          <template slot="header" slot-scope="scope">
            <div class="table-caozuo">
              <span>操作</span>
              <i class="iconfont icon-xitongweihu"></i>
            </div>
          </template>
          <template slot-scope="scope">
            <el-dropdown trigger="click">
              <span class="el-dropdown-link">
                <i class="ddd-title">...</i>
              </span>
              <el-dropdown-menu slot="dropdown">
                <el-dropdown-item icon="iconfont icon-xiangqingchakan"
                  >查看</el-dropdown-item
                >
                <el-dropdown-item icon="iconfont icon-xiugai"
                  >修改</el-dropdown-item
                >
                <el-dropdown-item
                  icon="iconfont icon-shanchu"
                  @click="handleDelete(scope.row)"
                  >删除</el-dropdown-item
                >
                <el-dropdown-item icon="iconfont icon-zhandianditu"
                  >地图审查</el-dropdown-item
                >
              </el-dropdown-menu>
            </el-dropdown>
          </template>
        </el-table-column>
      </el-table>
      <xx-pagination
        @getPagination="getPagination"
        layout="total, sizes, prev, pager, next, jumper"
        :total="total"
        :limit="queryParmas.rows"
      />
    </div>
  </div>
</template>
<script>
import { findSpecialManage, deleteSpecialManage } from "@/api/subjectPlan";
export default {
  data() {
    return {
      loading: false,
      queryParmas: {
        page: 1,
        rows: 10,
        regionCode: "",
        startYear: "",
        endYear: "",
      },
      options: [
        {
          value: "zhinan",
          label: "指南",
          children: [
            {
              value: "shejiyuanze",
              label: "设计原则",
              children: [
                {
                  value: "yizhi",
                  label: "一致",
                },
                {
                  value: "fankui",
                  label: "反馈",
                },
                {
                  value: "xiaolv",
                  label: "效率",
                },
                {
                  value: "kekong",
                  label: "可控",
                },
              ],
            },
            {
              value: "daohang",
              label: "导航",
              children: [
                {
                  value: "cexiangdaohang",
                  label: "侧向导航",
                },
                {
                  value: "dingbudaohang",
                  label: "顶部导航",
                },
              ],
            },
          ],
        },
        {
          value: "zujian",
          label: "组件",
          children: [
            {
              value: "basic",
              label: "Basic",
              children: [
                {
                  value: "layout",
                  label: "Layout 布局",
                },
                {
                  value: "color",
                  label: "Color 色彩",
                },
                {
                  value: "typography",
                  label: "Typography 字体",
                },
                {
                  value: "icon",
                  label: "Icon 图标",
                },
                {
                  value: "button",
                  label: "Button 按钮",
                },
              ],
            },
            {
              value: "form",
              label: "Form",
              children: [
                {
                  value: "radio",
                  label: "Radio 单选框",
                },
                {
                  value: "checkbox",
                  label: "Checkbox 多选框",
                },
                {
                  value: "input",
                  label: "Input 输入框",
                },
                {
                  value: "input-number",
                  label: "InputNumber 计数器",
                },
                {
                  value: "select",
                  label: "Select 选择器",
                },
                {
                  value: "cascader",
                  label: "Cascader 级联选择器",
                },
                {
                  value: "switch",
                  label: "Switch 开关",
                },
                {
                  value: "slider",
                  label: "Slider 滑块",
                },
                {
                  value: "time-picker",
                  label: "TimePicker 时间选择器",
                },
                {
                  value: "date-picker",
                  label: "DatePicker 日期选择器",
                },
                {
                  value: "datetime-picker",
                  label: "DateTimePicker 日期时间选择器",
                },
                {
                  value: "upload",
                  label: "Upload 上传",
                },
                {
                  value: "rate",
                  label: "Rate 评分",
                },
                {
                  value: "form",
                  label: "Form 表单",
                },
              ],
            },
            {
              value: "data",
              label: "Data",
              children: [
                {
                  value: "table",
                  label: "Table 表格",
                },
                {
                  value: "tag",
                  label: "Tag 标签",
                },
                {
                  value: "progress",
                  label: "Progress 进度条",
                },
                {
                  value: "tree",
                  label: "Tree 树形控件",
                },
                {
                  value: "pagination",
                  label: "Pagination 分页",
                },
                {
                  value: "badge",
                  label: "Badge 标记",
                },
              ],
            },
            {
              value: "notice",
              label: "Notice",
              children: [
                {
                  value: "alert",
                  label: "Alert 警告",
                },
                {
                  value: "loading",
                  label: "Loading 加载",
                },
                {
                  value: "message",
                  label: "Message 消息提示",
                },
                {
                  value: "message-box",
                  label: "MessageBox 弹框",
                },
                {
                  value: "notification",
                  label: "Notification 通知",
                },
              ],
            },
            {
              value: "navigation",
              label: "Navigation",
              children: [
                {
                  value: "menu",
                  label: "NavMenu 导航菜单",
                },
                {
                  value: "tabs",
                  label: "Tabs 标签页",
                },
                {
                  value: "breadcrumb",
                  label: "Breadcrumb 面包屑",
                },
                {
                  value: "dropdown",
                  label: "Dropdown 下拉菜单",
                },
                {
                  value: "steps",
                  label: "Steps 步骤条",
                },
              ],
            },
            {
              value: "others",
              label: "Others",
              children: [
                {
                  value: "dialog",
                  label: "Dialog 对话框",
                },
                {
                  value: "tooltip",
                  label: "Tooltip 文字提示",
                },
                {
                  value: "popover",
                  label: "Popover 弹出框",
                },
                {
                  value: "card",
                  label: "Card 卡片",
                },
                {
                  value: "carousel",
                  label: "Carousel 走马灯",
                },
                {
                  value: "collapse",
                  label: "Collapse 折叠面板",
                },
              ],
            },
          ],
        },
        {
          value: "ziyuan",
          label: "资源",
          children: [
            {
              value: "axure",
              label: "Axure Components",
            },
            {
              value: "sketch",
              label: "Sketch Templates",
            },
            {
              value: "jiaohu",
              label: "组件交互文档",
            },
          ],
        },
      ],
      tableData: [],
      total: 0,
    };
  },
  created() {
    this.getList();
  },
  computed: {
    quetyPlanDate: {
      get: function () {
        return "";
      },
      set: function (newValue) {
        console.log(
          newValue,
          "将传递的数值解析为传递的查询参数中的queryParmas.startYear,queryParmas.en  dYear "
        );
      },
    },
  },

  methods: {
    handelSearch() {},
    resetQuery() {},
    getList() {
      this.loading = true;
      findSpecialManage(this.queryParmas).then((res) => {
        console.log(res, "findSpecialManage(this.queryParmas).then((res) => {");
        this.tableData = res.data;
        this.total = res.total;
        this.loading = false;
      });
    },
    getPagination({ limit, page }) {
      console.log(limit);
      this.queryParmas.rows = limit;
      this.queryParmas.page = page;
      this.getList();
    },
    handleDelete(row) {
      const id = row.id || "";
      if (id) {
      } else {
      }
    },
  },
};
</script>
